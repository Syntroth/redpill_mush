# PREREQUISITE
# Make sure that you have a checkout of wcnh_systems at '../systems' or '../wcnh_systems' relative to this file.
# For example, if this file is at /home/foo/mush/README.WCNHDEV, you should have a /home/foo/systems/Gemfile.
# This is to make the Vagrant shared folders mapping work.
# If you do it right, you should see files in /mush and /systems when in the VM.

# VAGRANT
# 1: Install vagrant on your machine.
sudo gem install vagrant

# 2: Install Virtualbox from https://www.virtualbox.org/

# 3: Initialize the vm. This will take awhile as it needs to download the base box, and then run a bunch
#    of automated provisioning stuff.
vagrant up 

# 4: Login to vm.
vagrant ssh

# From here on, all commands are to be run on the VM, unless otherwise specified.


# RUBY
# Unfortunately, the default ruby version on the box is 1.8.7, so we'll use rvm to get 1.9.2 on there.
# 1: Install rvm
bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer )

# Disconnect from the vm and reconnect at this point, to get the path updates done by the rvm installer.

# 2: Run 'rvm requirements' and install all packages described (using sudo).

# 3: Install ruby 1.9.2p0 using rvm. This compiles it from source, so this takes a little bit too.
rvm install 1.9.2

# 4: Tell rvm to use 1.9.2.
rvm use 1.9.2 --default

# 5: Disconnect from ssh and reconnect and make sure you're on 1.9.2
ruby -v
# should be: ruby 1.9.2p290 (2011-07-09 revision 32553) [i686-linux]


# MONGO
# The default Mongo packages for Ubuntu are wildly out of date. So, we'll use 10gen's packages.
# 1: Import 10gen's key
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10

# 2: Add 10gen's repo as a source
#    Add this line to /etc/apt/sources.list:
#    deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen

# 3: Install the MongoDB package. This sets the MongoDB server up, too.
sudo apt-get update
sudo apt-get install mongodb-10gen


# GEMS
# 1: Install systems gems
cd /systems
bundle install

# 2: Install Penn gems
cd /mush/game/ruby
bundle install


# PENNMUSH
# 1: Configure
cd /mush
./configure

# 2: Compile
make install

# 3: Pull outdb.gz from Dropbox to /mush/game/data.

# 4: Prepare config.yml to point to systems files.
cp /mush/game/ruby/config.yml.dist /mush/game/ruby/config.yml
# Now, edit /mush/game/ruby/config.yml and add:
#   - /systems

# 5: start the game
sh game/restart

# If the game comes up properly, it will be on port 2199 on the VM. That port is automatically mapped through to the host.
# So, from your host box, you should be able to telnet localhost 2199 and log in.
# Once you login, run: think [rpc(Ping.pong)] 
# If it works, you should see PONG back at you. :D

# Basic vagrant commands:
# vagrant up - starts and builds vm
# vagrant ssh - log in
# vagrant suspend - pause vm (good idea to @shutdown the MUSH first)
# vagrant resume - resume suspended vm
# vagrant halt - hard-power-off vm
# vagrant reload - re-applies the Vagrantfile / puppet manifest to your existing vm
# vagrant destroy - permanently blow up the vm